.TH spec2arch 1 "14 July 2008"
.IX spec2arch
.SH NAME
RPM SpecFile to ArchLinux PKGBUILD converter

.SH SYNOPSIS
.B spec2arch
.RB "\fIRPMSpecFile\fR"
.RB "\fIPKGBUILDFile\fR"
.RB [ options ]

.SH DESCRIPTION
spec2arch does a raw "convert" from a given .spec file to an ArchLinux
PKGBUILD file. The resulting file will rarely be that perfect to use it
straight ahead, and will at least need to be reviewed if not even corrected -
but it will make it much easier to get started with it. For these corrections,
you can specify to call the editor after the auto-create has been finished
(default) - and additionally, namcap.py will be called to verify after that,
if it's found in the $PATH.

spec2arch will most probably fail with too complex .spec files. But for "easy
packages", you may successfully use it in conjunction with \fBpkgmake\fR, and
may even be as lucky again as to only maintain the one .spec file, but create
packages for even one more distribution.

.SH OPTIONS
.IP "\fBRPMSpecFile\fR"
This is the input file to read, which obviously has to be a RPM .spec file. The
templates used for pkgmake will not work for obvious reasons: They contain
placeholders instead of the real values...

.IP "\fBPKGBUILDFile\fR"
The output file to generate. It will most likely be named PKGBUILD, but this
way you can provide the directory and name where to store it.

.IP "\fB-b\fR"
Don't apply corrections to the build() block. Overwrites the
\fIDO_BUILD_REPLACE\fR configuration parameter.

.IP "\fB+b\fR"
Apply corrections to the build() block. Overwrites the \fIDO_BUILD_REPLACE\fR
configuration parameter.

.IP "\fB-e\fR"
Do not invoke the editor with the PKGBUILD file once it is created
(overwrites EDIT_PKGBUILD setting)

.IP "\fB+e\fR"
Invoke the editor with the PKGBUILD file once it is created
(overwrites EDIT_PKGBUILD setting)

.IP "\fB-n\fR"
Don't check the generated PKGBUILD file with namcap.py - even if the config
says USE_NAMCAP=1 and namcap.py is found in the $PATH

.IP "\fB+n\fR"
Check the generated PKGBUILD file with namcap.py - even if the config says
USE_NAMCAP=0. Does only have effect if namcap.py can be found in the $PATH

.IP "\fB-o\fR"
Don't overwrite target if exists (overwrites config setting
\fIOVERWRITE_TARGET\fR)

.IP "\fB+o\fR"
Overwrite target if exists (overwrites config setting
\fIOVERWRITE_TARGET\fR)

.IP "\fB-w\fR"
Do not put the warning in the PKGBUILD file (overwrites config setting
\fIUSE_WARNING\fR)

.IP "\fB+w\fR"
Put the warning in the PKGBUILD file (overwrites config setting
\fIUSE_WARNING\fR)

.IP "\fB--baseurl <baseurl>\fR"
Set SRC_BASEURL to <baseurl> (overwrites config setting
\fISRC_BASEURL\fR)

.IP "\fB--editor <editor>\fR"
Define the editor to use to edit the created PKGBUILD file for manual control
(overwrites the EDITOR config setting)

.IP "\fB--md5of <filespec>\fR"
Calculate md5sums of the given file(s). If you need to specify multiple files,
you must separate them by colons (e.g. "file1.ext:file2.ext").

.SH "EXAMPLES"
# Simple call - use settings from the config only
.br
spec2arch sample.spec /usr/local/src/sample/PKGBUILD

# Same as above, but overwrite existing output and skip build()
.br
spec2arch sample.spec /usr/local/src/sample/PKGBUILD +o -b

# Same as first, but put no warning and use vi to edit PKGBUILD file
.br
spec2arch sample.spec /usr/local/src/sample/PKGBUILD -w --editor vi

.SH "CONFIGURATION"
Not that much to configure  - for now it's just one line at the top of the
script itself, where you may configure the URL path for the source tarball.

.SH "FILES"
/usr/bin/spec2arch

.SH "SEE ALSO"
.PP
spec2arch.conf(5)

.SH "AUTHOR"
.PP
This manual page was written by Andreas Itzchak Rehberg (devel@izzysoft.de),
the author of the program. Credit should be given also to Daenyth <Daenyth+Arch
AT gmail DOT com> who added a lot concerning the ArchLinux specials - so if you
are using ArchLinux, you may also want to have a look at his pkgtools:

	http://aur.archlinux.org/packages.php?ID=17941

which may already ship with a copy of this script.

Permission is granted to copy, distribute and/or modify this document under the
terms of the GNU General Public License, Version 2.

More information may be found on the authors website, http://www.izzysoft.de/
